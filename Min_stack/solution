import java.util.*;

class MinStack {
    Stack<Integer> st;
    Stack<Integer> minstack;

    public MinStack() {
        st = new Stack<>();
        minstack = new Stack<>();
    }

    public void push(int val) {
        st.push(val);
        if (minstack.isEmpty() || val <= minstack.peek()) {
            minstack.push(val);
        }
    }

    public void pop() {
        int popped = st.pop();
        if (popped == minstack.peek()) {
            minstack.pop();
        }
    }

    public int top() {
        return st.peek();
    }

    public int getMin() {
        return minstack.peek();
    }
}

public class Main {
    public static void main(String[] args) {
        MinStack minStack = new MinStack();

        minStack.push(-2);
        minStack.push(0);
        minStack.push(-3);
        System.out.println("Min: " + minStack.getMin()); // -3

        minStack.pop();
        System.out.println("Top: " + minStack.top());    // 0
        System.out.println("Min: " + minStack.getMin()); // -2

        minStack.pop();
        minStack.pop();
        System.out.println("Is stack empty? " + minStack.st.isEmpty()); // true
    }
}
