class Solution {
    public int evalRPN(String[] tokens) {
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            if (tokens[i].equals("+") || tokens[i].equals("-") || tokens[i].equals("*") || tokens[i].equals("/")) {
                int t1 = st.pop();
                int t2 = st.pop();
                if (tokens[i].equals("+")) {
                    st.push(t2 + t1);
                } else if (tokens[i].equals("-")) {
                    st.push(t2 - t1);
                } else if (tokens[i].equals("*")) {
                    st.push(t2 * t1);
                } else {
                    if (t1 == 0) {
                        throw new ArithmeticException("Division by zero");
                    }
                    st.push(t2 / t1);
                }
            } else {
                st.push(Integer.parseInt(tokens[i]));
            }
        }
        return st.pop();
    }
}
