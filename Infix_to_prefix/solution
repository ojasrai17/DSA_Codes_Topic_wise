// Online Java Compiler
// Use this editor to write, compile and run your Java code online

import java.util.*;
class Main {
    public static int prec(char ch){
        switch(ch){
         case '+':
         case '-':
             return 1;
         case '*':
         case '/':
             return 2;
         case '^':
             return 3;
        }
        return -1;
    }
    public static String reverseAndSwap(String s) {
        char[] arr = s.toCharArray();
        int left = 0, right = arr.length - 1;
        while (left < right) {
            // Swap characters
            char temp = arr[left];
            arr[left] = arr[right];
            arr[right] = temp;
            left++;
            right--;
        }

        // Swap '(' with ')' and vice versa
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == '(') arr[i] = ')';
            else if (arr[i] == ')') arr[i] = '(';
        }
        return new String(arr);
    }
    public static String infixtopostfix(String s){
        String ans=new String("");
        Stack<Character> st=new Stack<>();
        int i=0;
        while(i<s.length()){
         if(Character.isLetterOrDigit(s.charAt(i))){
             ans=ans+s.charAt(i);
         }
         else if(s.charAt(i)=='('){
             st.push(s.charAt(i));
         }
         else if(s.charAt(i)==')'){
             while(!st.isEmpty() && st.peek()!='('){
             ans=ans+st.pop();
             }
             if(!st.isEmpty() && st.peek()=='('){
                 st.pop();
             }
         }
         else{
          while(!st.isEmpty()&& (prec(s.charAt(i))<prec(st.peek())|| (prec(s.charAt(i))==prec(st.peek()) && s.charAt(i)=='^'))){
              ans=ans+st.pop();
          }
          st.push(s.charAt(i));
         }
         i++;
        }
        while(!st.isEmpty()){
            if(st.peek()=='C'){
                return "Invalid Exp";
            }
            ans+=st.pop();
        }
        return ans;
        
    }
    public static void main(String[] args) {
     String exp = "(p+q)*(m-n)";
    System.out.println("Infix expression: " + exp);

    String reversed = reverseAndSwap(exp);
    System.out.println("Reversed & swapped expression: " + reversed);

    String postfix = infixtopostfix(reversed);
    System.out.println("Postfix of reversed: " + postfix);

    String prefix = "";
    for (int i = postfix.length() - 1; i >= 0; i--) {
        prefix += postfix.charAt(i);
    }
    System.out.println("Prefix expression: " + prefix);
    }
}
