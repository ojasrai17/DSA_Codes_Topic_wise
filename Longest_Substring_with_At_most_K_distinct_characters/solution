import java.util.*;

public class Solution {
    public int countSubstringsAtMostKDistinct(String s, int k) {
        int left = 0, right = 0;
        int count = 0;
        Map<Character, Integer> map = new HashMap<>();

        while (right < s.length()) {
            char ch = s.charAt(right);
            map.put(ch, map.getOrDefault(ch, 0) + 1);

            while (map.size() > k) {
                char leftChar = s.charAt(left);
                map.put(leftChar, map.get(leftChar) - 1);
                if (map.get(leftChar) == 0) {
                    map.remove(leftChar);
                }
                left++;
            }

            // All substrings between left and right are valid
            count += (right - left + 1);
            right++;
        }

        return count;
    }
}
